import{_ as e,o as r,c as a,R as t}from"./chunks/framework.nTuspWkn.js";const g=JSON.parse('{"title":"CSS","description":"","frontmatter":{},"headers":[],"relativePath":"css.md","filePath":"css.md"}'),l={name:"css.md"},s=t('<h1 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h1><h2 id="预处理器" tabindex="-1">预处理器 <a class="header-anchor" href="#预处理器" aria-label="Permalink to &quot;预处理器&quot;">​</a></h2><ul><li><a href="https://lightningcss.dev/" target="_blank" rel="noreferrer">Lightning CSS</a></li><li><a href="https://stylus-lang.com/" target="_blank" rel="noreferrer">Stylus</a> - Expressive, robust, feature-rich CSS language built for NodeJs.</li><li><a href="https://sass-lang.com/" target="_blank" rel="noreferrer">Sass</a> - Mature, stable, and powerful professional-grade CSS extension language.</li><li><a href="https://github.com/postcss/postcss" target="_blank" rel="noreferrer">PostCSS</a> - Transforming CSS with JS plugins.</li><li><a href="https://github.com/css-modules/css-modules" target="_blank" rel="noreferrer">CSS Modules</a></li><li><a href="https://github.com/less/less.js" target="_blank" rel="noreferrer">LESS</a> - Backwards compatible with CSS, and the extra features it adds use existing CSS syntax.</li></ul><h2 id="原子-css" tabindex="-1">原子 CSS <a class="header-anchor" href="#原子-css" aria-label="Permalink to &quot;原子 CSS&quot;">​</a></h2><ul><li><a href="https://unocss.dev/" target="_blank" rel="noreferrer">UnoCSS</a></li><li><a href="https://tailwindcss.com/" target="_blank" rel="noreferrer">Tailwind CSS</a></li><li><a href="https://github.com/dcastil/tailwind-merge" target="_blank" rel="noreferrer">tailwind-merge</a> - 用于在 JS 中高效合并 Tailwind CSS 类而不会发生样式冲突。</li><li><a href="https://windicss.org/" target="_blank" rel="noreferrer">Windi CSS</a>（停止更新，进入维护状态）</li></ul><h2 id="css-in-js" tabindex="-1">CSS in JS <a class="header-anchor" href="#css-in-js" aria-label="Permalink to &quot;CSS in JS&quot;">​</a></h2><ul><li><a href="https://github.com/facebook/stylex" target="_blank" rel="noreferrer">Stylex</a></li><li><a href="https://github.com/vercel/styled-jsx" target="_blank" rel="noreferrer">styled-jsx</a></li><li><a href="https://github.com/thysultan/stylis" target="_blank" rel="noreferrer">Stylis</a> - Light-weight CSS preprocessor.</li><li><a href="https://cssinjs.org/" target="_blank" rel="noreferrer">JSS</a></li><li><a href="https://github.com/emotion-js/emotion" target="_blank" rel="noreferrer">emotion</a></li></ul><h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">​</a></h2><ul><li><a href="https://github.com/stylelint/stylelint" target="_blank" rel="noreferrer">Stylelint</a> - CSS Lint 工具。</li></ul><h2 id="教程" tabindex="-1">教程 <a class="header-anchor" href="#教程" aria-label="Permalink to &quot;教程&quot;">​</a></h2><ul><li><a href="https://2023.stateofcss.com/zh-Hans" target="_blank" rel="noreferrer">CSS 2023年度报告</a></li></ul><h2 id="博客" tabindex="-1">博客 <a class="header-anchor" href="#博客" aria-label="Permalink to &quot;博客&quot;">​</a></h2><ul><li><a href="https://www.smashingmagazine.com/2023/11/few-ways-css-easier-write-2023/" target="_blank" rel="noreferrer">A Few Ways CSS Is Easier To Write In 2023</a> 2023 年 CSS 几种更易用的技巧。</li></ul>',13),i=[s];function n(o,h,c,S,f,u){return r(),a("div",null,i)}const b=e(l,[["render",n]]);export{g as __pageData,b as default};
